#!/bin/bash
shellpath=`dirname $0`
output_dir=tiglon_outdir
left=read_1.fastq
right=read_2.fastq
single=Mysingle.fastq
BamFiles="No_input"
genome=Genome
reference=Ref
output_dir=tiglon_outdir
IndexDir="NO_index"
strand=unstranded
thread=2
MinAverageCov=0.03 #--min-average-junc-ratio 
MinUnbalanceCov=0.03 #--min-unbalance-ratio
Filter=0.1 # 0.5
Gap=200 #--min-gap-length
TransLen=500
usage()
{
cat << EOT
===========================================================================

Tiglon v.1.1 usage:

** Required **

--bam/-B <string>		: path to the file listing the alignments BAM files.(one per line)

--strand/-s <string> 		: Strand-specific RNA-Seq reads orientation.

              			   If reads are paired:
				    1) Use <unstranded> to indicate RNA-seq reads are non-strand-specific.
                		    2) Use <first> to indicate fr-first-stranded RNA-seq reads.
               			    3) Use <second> to indicate fr-second-stranded RNA-seq reads.

              			   If reads are single:
                		    1) Use <single_unstranded> to indicate RNA-seq reads are non-strand-specific.
                		    2) Use <single_forward> to indicate RNA-seq reads are forward.
                		    3) Use <single_reverse> to indicate RNA-seq reads are reverse.

---------------------------------------------------------------------------

** Options **

--help/-h			: Output Tiglon Help Information

--version/-v			: Print current version of Tiglon

--output_dir/-o <string>	: Output path, default: tiglon_outdir

--min_trans_cov/-c <float> 	: Minimum expression level estimated by abundance analysis for output, default: >0.

--min_trans_length/-L <int>   	: Minimum assembled transcript length, default: 500.

--min_average_frac/-d <float> 	: Minimum junction coverage fraction by average junction coverage, default: 0.03.

--min_unbalance_frac/-D <float> : Minimum fraction of unbalanced junction, default: 0.03.

--min_gap_length/-e <int>   	: Minimum gap length between two exons, default: 200.

--thread/-p <int> 		: Number of threads to use (default: 2)

---------------------------------------------------------------------------

** Typical commands **

(i) A typical Tiglon command for paired-end data might be:

  Tiglon -B bamFiles_list -s first -o Tiglon_outdir -p 2

(ii) A typical Tiglon command for single-end data might be:

  Tiglon -B bamFiles_list -s single_reverse -o Tiglon_outdir -p 2

===========================================================================
EOT
}
#usage

# parse options:
RET=`getopt -o hvB:o:g:l:r:R:s:i:U:d:D:L:e:c:p: \
--long help,version,bam:,output_dir:,genome:,left_reads:,right_reads:,\
ref_gtf:,strand:,index_dir:,\
single_reads:,min_average_frac:,min_unbalance_frag:,min_trans_length:,\
min_gap_length:,min_trans_cov:,\
thread:\
  -n ' * ERROR' -- "$@"`

#MinAverageCov=0.03 #--min-average-junc-ratio 
#MinUnbalanceCov=0.03 #--min-unbalance-ratio
#Filter=0 # 0.5
#Gap=200 #--min-gap-length
#TransLen=500

# Note the quotes around $RET: they are essential!
eval set -- "$RET"
# set option values
while true; do
    case "$1" in
        -h | --help ) usage; exit 1;;
        -v | --version ) echo "** The current version of Tiglon is v.1.1 **"; exit 1;;
        -o | --output_dir) output_dir=$2     
			shift 2 ;;
        -B | --bam) 	   BamFiles=$2 
			shift 2 ;;
	-g | --genome) 	   genome=$2  
			shift 2 ;;
	-l | --left_reads) 	   left=$2  
			shift 2 ;;
	-r | --right_reads) 	   right=$2  
			shift 2 ;;
	-R | --ref_gtf) reference=$2  
			shift 2 ;;
	-s | --strand) 	   strand=$2  
			shift 2 ;;
	-i | --index_dir)  IndexDir=$2 
			shift 2 ;;
	-U | --single_reads)     single=$2  
			shift 2 ;;
	-d | --min_average_frac) MinAverageCov=$2 
			shift 2 ;;
	-D | --min_unbalance_frac) MinUnbalanceCov=$2
			shift 2 ;;
	-L | --min_trans_length) TransLen=$2 
			shift 2 ;;
	-e | --min_gap_length) Gap=$2 
			shift 2 ;;
	-c | --min_trans_cov) Filter=$2 
			shift 2 ;;
	-p | --thread) thread=$2 
			shift 2 ;;
        -- ) shift; break ;;
        * ) echoerror "internal error!" ; exit 1 ;;
     esac
done

#echo $Bam " " $genome " " $single $strand $IndexDir


if [ $BamFiles == "No_input" ]; then
         echo "    "
         echo "[Error] : BAM input file is not provided!"
         echo "    "
	 usage
         exit 1
fi

if [ $strand != "first" ] && [ $strand != "second" ] && [ $strand != "unstranded" ] &&[ $strand != "single_forward" ] && [ $strand != "single_reverse" ] && [ $strand != "single_unstranded" ]; then
    echo ""
    echo "[Error] :  --strand/-s argument need to be either \"unstranded\", \"first\" or \"second\" for parired-end reads"
    echo "            or \"single_unstranded\", \"single_forward\" or \"single_reverse\" for single-end reads" 
    echo ""
    exit 1
fi
MyDate=$(date "+%d/%m/%Y %T")
if [ ! -x "$output_dir" ]; then  
    mkdir $output_dir  
else 
    echo "[$MyDate] [Warning] : $output_dir exists already. It will be overwritten."
    rm -rf $output_dir
    mkdir $output_dir
fi
i=0
j=0
while read bam
do
    let i=i+1
    echo $shellpath/src/bin/tiglon_graph -b $bam -s $strand -o $output_dir --suffix "bam"$i>> $output_dir/command
    let x=$i%$thread
    if [ $x = 0 ]; then
        let j=j+1
#	echo "* "$x $i $j
	mv $output_dir/command $output_dir/command$j
    fi

    done < $BamFiles
let j=j+1
mv $output_dir/command $output_dir/command$j 2>$output_dir/log

for file_a in $output_dir/*;
do
 file=`basename $file_a`
 P=${file:0:7}
 if [ $P == "command" ]; then
#   echo $file >>$output_dir/log
   cat $output_dir/$file >>$output_dir/log
   tmpfile=$$.fifo
   mkfifo $tmpfile
   exec 4<>$tmpfile
   rm $tmpfile
   for ((i=1;i<=100;i++));do # thred
         echo
	 done >&4
	 SAVEIFS=$IFS
	 IFS=$'\n'
#	 for i in `cat $output_dir/command`
	 for i in `cat $output_dir/$file`
	 do
	 read
	   (eval ${i};echo >&4 ) &
	   done <&4
	   IFS=$SAVEIFS
	   wait
	   exec 4>&-
  fi
done

##path-search
for file_a in $output_dir/*;
do
	temp_file=`basename $file_a`
	Dir=$output_dir/$temp_file

	if [ -d $Dir ];then
	  ls $Dir > $output_dir/gr_list
#	  echo "Processing chromosome:" $temp_file "..."
	  $shellpath/src/bin/tiglon_path_search $output_dir/gr_list $output_dir/$temp_file $output_dir $strand >> $output_dir/log
	  rm $output_dir/gr_list
	fi
done

$shellpath/TiglonMerge -B $BamFiles -s $strand -o $output_dir --thread $thread --min_trans_cov $Filter
